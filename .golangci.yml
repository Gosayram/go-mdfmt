run:
  timeout: 5m
  issues-exit-code: 1
  tests: true

output:
  formats:
    - colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters-settings:
  govet:
    enable:
      - shadow
  gocyclo:
    min-complexity: 15
  dupl:
    threshold: 100
  goconst:
    min-len: 3
    min-occurrences: 3
  misspell:
    locale: US
  lll:
    line-length: 120
  goimports:
    local-prefixes: github.com/Gosayram/go-mdfmt
  gocritic:
    enabled-tags:
      - performance
      - style
      - experimental
    disabled-checks:
      - wrapperFunc
  funlen:
    lines: 100
    statements: 50
  gocognit:
    min-complexity: 20
  depguard:
    rules:
      main:
        deny:
          - pkg: "github.com/pkg/errors"
            desc: "use standard errors package"

linters:
  enable:
    - bodyclose
    - dupl
    - errcheck
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - mnd
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace
    - revive
  disable:
    - depguard

issues:
  exclude-dirs:
    - vendor
    - .git
  exclude-files:
    - ".*\\.pb\\.go$"
    - ".*_test\\.go$"
  exclude-rules:
    - path: _test\.go
      linters:
        - mnd
        - funlen
        - gocognit
    - path: cmd/
      linters:
        - gochecknoinits
  exclude:
    - "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*printf?|os\\.(Un)?Setenv). is not checked"
  exclude-use-default: false
  max-issues-per-linter: 0
  max-same-issues: 0 
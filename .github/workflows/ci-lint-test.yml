name: CI - Lint and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: read

jobs:
  lint_and_test:
    name: Lint and Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    if: github.event.pull_request.draft == false || github.event_name == 'push'
    
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        
      - name: Get Go Version
        shell: bash
        run: |
          #!/bin/bash
          GOVERSION=$({ [ -f .go-version ] && cat .go-version; })
          echo "GOVERSION=$GOVERSION" >> $GITHUB_ENV
          
      - name: Setup Go
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.4.0
        with:
          go-version: ${{ env.GOVERSION }}
          
      - name: Go Cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GOVERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GOVERSION }}-
            ${{ runner.os }}-go-
            
      - name: Download Dependencies
        run: go mod download
        
      - name: Verify Dependencies
        run: go mod verify
        
      - name: Build
        run: make build
        
      - name: Run Tests
        run: make test
        
      - name: Run Tests with Race Detection
        run: make test-race
        
      - name: Run Tests with Coverage
        run: make test-coverage
        
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4.6.0
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        
      - name: Go Lint
        env:
          GOGC: 10
        uses: golangci/golangci-lint-action@971e284b6050e8a5849b72094c50ab08da042db8 # v6.1.1
        with:
          version: latest
          only-new-issues: true
          args: --timeout=10m
          
      - name: Run Staticcheck
        uses: dominikh/staticcheck-action@fe1dd0c3658873b46f8c9bb3291096a617310ca6 # v1.3.1
        with:
          version: "latest"
          install-go: false
          cache-key: ${{ runner.os }}-${{ env.GOVERSION }}
          
      - name: Run Integration Tests
        run: make test-integration
        
      - name: Test Data Validation
        run: make test-data-check 